{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dungtran/Downloads/google-books-main/client/src/pages/SaveBooks.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container } from \"../components/Grid\";\nimport SavedResult from \"../components/SavedResult\";\n\nclass SaveBook extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      savedBooks: []\n    };\n\n    this.handleDeleteButton = _id => {\n      API.deleteBook(_id).then(res => this.componentDidMount()).catch(err => console.log(err));\n    };\n  }\n\n  //when this component mounts, grab all books that were save to the database \n  componentDidMount() {\n    API.getBooks().then(res => this.setState({\n      savedBooks: res.data\n    })).catch(err => console.log(err));\n  } //function to remove book by _id\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Jumbotron, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(SavedResult, {\n          savedBooks: this.state.savedBooks,\n          handleDeleteButton: this.handleDeleteButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SaveBook;","map":{"version":3,"sources":["/Users/dungtran/Downloads/google-books-main/client/src/pages/SaveBooks.js"],"names":["React","Component","API","Jumbotron","Container","SavedResult","SaveBook","state","savedBooks","handleDeleteButton","_id","deleteBook","then","res","componentDidMount","catch","err","console","log","getBooks","setState","data","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,SAAT,QAAyB,oBAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BM,KAD6B,GACrB;AACJC,MAAAA,UAAU,EAAE;AADR,KADqB;;AAAA,SAa7BC,kBAb6B,GAaRC,GAAG,IAAI;AACxBR,MAAAA,GAAG,CAACS,UAAJ,CAAeD,GAAf,EACKE,IADL,CACUC,GAAG,IAAI,KAAKC,iBAAL,EADjB,EAEKC,KAFL,CAEWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGH,KAjB4B;AAAA;;AAK7B;AACAF,EAAAA,iBAAiB,GAAG;AAChBZ,IAAAA,GAAG,CAACiB,QAAJ,GACKP,IADL,CACUC,GAAG,IAAI,KAAKO,QAAL,CAAc;AAAEZ,MAAAA,UAAU,EAAEK,GAAG,CAACQ;AAAlB,KAAd,CADjB,EAEKN,KAFL,CAEWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGH,GAV4B,CAY7B;;;AAOAM,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC,WAA3B;AAAA,8BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,UAAU,EAAE,KAAKf,KAAL,CAAWC,UAApC;AAAgD,UAAA,kBAAkB,EAAE,KAAKC;AAAzE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA5B4B;;AAiCjC,eAAeH,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container} from \"../components/Grid\";\nimport SavedResult from \"../components/SavedResult\";\n\nclass SaveBook extends Component {\n    state = {\n        savedBooks: []\n    };\n\n    //when this component mounts, grab all books that were save to the database \n    componentDidMount() {\n        API.getBooks()\n            .then(res => this.setState({ savedBooks: res.data }))\n            .catch(err => console.log(err));\n    }\n\n    //function to remove book by _id\n    handleDeleteButton = _id => {\n        API.deleteBook(_id)\n            .then(res => this.componentDidMount())\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <Container fluid className=\"container\">\n                <Jumbotron />\n                <Container>\n                    <SavedResult savedBooks={this.state.savedBooks} handleDeleteButton={this.handleDeleteButton} />\n                </Container>\n            </Container>\n        )\n    }\n}\n\n\n\nexport default SaveBook "]},"metadata":{},"sourceType":"module"}